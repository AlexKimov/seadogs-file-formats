//------------------------------------------------
//--- 010 Editor v8.0.1 Script File
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
//   History: 
//------------------------------------------------

local uchar Buffer[10485760]; // file buffer
local uint width, height;
local float size;
local int FileIndex;
local string FileName;
local ubyte MapCount, MaskCount, FileType;

string FileNameRemoveExt(string FileName)
{
  return SubStr(FileName, 0, Strchr(FileName, '.'));
};

void CreateBMPFile(string Name, uchar Buffer[], uint type, uint width, uint height) 
{
  local uchar a, b, RGBA[4], Empty[50], Line[4092];
  local float w, alignment, depth;
  local int pos, i;
  local float size;
  local char bfType[2];
  local WORD bfReserved1, bfReserved2, biPlanes, biBitCount; 
  local DWORD bfSize, bfOffBits, biSize, biWidth, biHeight, biCompression, biSizeImage, biXPelsPerMeter, biYPelsPerMeter, biClrUsed, biClrImportant, biRMask, biGMask, biBMask, biAMask; 

  FileNew("Hex");

  depth = 16;
  if (type != 3)
  {
    size = width*height*(depth/8);
    w = width*(depth/8);
  }
  else
  {
    size = width*height;
    w = width; 
  };
  
  if (w % 4 > 0)
    alignment = 4 - w % 4;  

  // BMP Header
  bfType = "BM";
  WriteBytes(bfType, 0, 2);
  FSkip(2);

  if (type == 3)
    bfSize = size + 1078;
  else
  if (type >= 4)
    bfSize = size + 54;
  else
    bfSize = size + 70;

  WriteInt(FTell(), bfSize);
  FSkip(4);

  bfReserved1 = 0;
  WriteShort(FTell(), bfReserved1 );
  FSkip(2);
  bfReserved2 = 0;
  WriteShort(FTell(), bfReserved2 );
  FSkip(2);

  if (type == 3)
    bfOffBits = 1078;
  else
  if (type >= 4)
    bfOffBits = 54;
  else
    bfOffBits = 70;
  WriteInt(FTell(), bfOffBits);
  FSkip(4);

  if (type >= 3)
    biSize = 40;
  else
    biSize = 56;

  WriteInt(FTell(), biSize);
  FSkip(4);

  biWidth = width;
  WriteInt(FTell(), biWidth);
  FSkip(4);
  biHeight = -height;
  WriteInt(FTell(), biHeight);
  FSkip(4);

  biPlanes = 1;
  WriteShort(FTell(), biPlanes );
  FSkip(2);

  if (type == 3)
    biBitCount = 8;
  else
    biBitCount = depth;

  WriteInt(FTell(), biBitCount);
  FSkip(2);

  if (type >= 4)
    biCompression = 0;
  else
    biCompression = 3;

  WriteInt(FTell(), biCompression);
  FSkip(4);
  biSizeImage = size;
  WriteInt(FTell(), biSizeImage);
  FSkip(4);

  biXPelsPerMeter = 3780;
  WriteInt(FTell(), biXPelsPerMeter );
  FSkip(4);
  biYPelsPerMeter = 3780;
  WriteInt(FTell(), biYPelsPerMeter);
  FSkip(4);
  biClrUsed = 0;
  WriteInt(FTell(), biClrUsed);
  FSkip(4);
  biClrImportant = 0;
  WriteInt(FTell(), biClrImportant);
  FSkip(4);

  if (type == 1) // 565
  {
    biRMask = 63488;
    biGMask = 2016;
    biBMask = 31;
    biAMask = 0;
  }
  else // 4444
  {
    biRMask = 3840;
    biGMask = 240;
    biBMask = 15;
    biAMask = 0;
  };

  if (type < 3) // 8 bit 
  {
    WriteInt(FTell(), biRMask);
    FSkip(4);
    WriteInt(FTell(), biGMask);
    FSkip(4);
    WriteInt(FTell(), biBMask);
    FSkip(4);
    WriteInt(FTell(), biAMask);
    FSkip(4);
  } 
  else
  if (type == 3)
  {
    WriteBytes(Palette, FTell(), 1024);
    FSkip(1024); 
  };

  if (alignment > 0)
    for ( i = 0; i < height; ++i)
    { 
      Memcpy(Line, Buffer, w, 0, pos);
      WriteBytes(Line, FTell(), w);
      FSkip(w); 
      WriteBytes(Empty, FTell(), alignment);
      FSkip(alignment);
      pos += w;
    }

  WriteBytes(Buffer, FTell(), size);
  FileSave(Name + ".bmp");
  FileClose();
};

void ReadTFFile()
{
  FSkip(5);

  FileType = ReadByte();
  FSkip(1); 

  MapCount = ReadByte();
  FSkip(1);
  MaskCount = ReadByte();
  FSkip(1);

  width = ReadInt();
  FSkip(4);
  height = ReadInt();
  FSkip(4);

  size = height*width*2;
  ReadBytes(Buffer, FTell(), size);
};

void TFtoBMP()
{
  FileIndex = GetFileNum();
  FileName = GetFileName();
  ReadTFFile();
  if (FileType)
    CreateBMPFile(FileNameRemoveExt(FileName), Buffer, 4, width, height); 
  else
    CreateBMPFile(FileNameRemoveExt(FileName), Buffer, 1, width, height); 
}

TFtoBMP();
