//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: ANI.bt
//   Authors: Alexander Evdokimov
//   Version: 0.1
//   Purpose: Sea Dogs game ANI files
// File Mask: *.ani
//
//   History: 
//
// 2018.06 v0.1 Initial release
// 
//------------------------------------------------

struct {
  UINT SectionOffset <name="First section offset">;
  UINT ObjectCount;
  UINT SectionoOffset <name="Second section offset">;
  UINT FrameCount;
} FILE_HEADER;

typedef struct {
  UINT type;
  UINT StartFrame;  
  UINT Length;
  switch (Length)
  {
    case 4: 
      FLOAT Unknown; 
    break;
    case 8: 
    { 
      INT Unknown;
      UINT Unknown; 
    } break;
    case 36: 
    { 
      char ObjectName[Length];
    } break;
    case 56: 
    { 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      char ObjectName[32];
    } break;
    case 296: 
    { 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      UINT Unknown;
      UINT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      UINT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown; 
      FLOAT Unknown;
      FLOAT Unknown;
      FLOAT Unknown;
      char ObjectName1[48];
      char ObjectName2[48];
      char ObjectName3[48];
      char ObjectName4[48];
    } break;
    default: char ObjectName[Length];
  };
} OBJECT <name=getName>;

string getName(OBJECT &obj) 
{ 
  if (exists(obj.ObjectName)) 
    return obj.ObjectName;
  else
    return "Object";    
};

typedef struct (uint size) {
  OBJECT array[size] <optimize=false>;
} OBJECT_ARRAY;

OBJECT_ARRAY Array(FILE_HEADER.ObjectCount) <name="Objects">;

struct {
  struct {
    FLOAT X;
    FLOAT Y;
    FLOAT Z;
  } POSITION;
  struct { 
    FLOAT X;
    FLOAT Y;
    FLOAT Z;
  } ROTATION;
  FLOAT Frame;
} ANIMATIONS[FILE_HEADER.FrameCount];