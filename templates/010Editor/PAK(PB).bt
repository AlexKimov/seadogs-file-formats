//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: PAK(PB).bt
//   Authors: Alexander Evdokimov
//   Version: 0.1
//   Purpose: Privateer’s Bounty game (2002) PAK files
// File Mask: *.pak
//
//   History: 
//
// 2018.07 v0.1 Initial release
// 
//------------------------------------------------

//#include "CFF.bt"

local uint i, k, pos, FolderCount, FileCount;
local string ext;

struct {
  char ENPAK[6] <name="Signature">;
  BYTE Empty1[2]; // 0
  UINT16 Unknown; // 2
  UINT FileTableOffset;
  BYTE Empty2[16];
} HEADER <name="File Header">;

// jump to file table
FSeek(HEADER.FileTableOffset);

struct {
  UINT FolderCount;
  struct {
    UINT FileCount; 
    string Name;
  } FOLDERS[FolderCount] <optimize=false>;

  for (i = 0; i < FolderCount; ++i) {
    struct {
      UINT FileSize;
      UINT Offset;
      UINT type; // 0
      string FileName;
    } FILE_ENTRY[FOLDERS[i].FileCount] <optimize=false>;
  };
} FILE_TABLE;

// return to first file

FSeek(FILE_TABLE.FILE_ENTRY[0].Offset);

pos = 0;
i = 0;

struct {
  FolderCount = FILE_TABLE.FolderCount;
  for (k = 0; k < FolderCount; ++k)  { 
    FileCount = FILE_TABLE.FOLDERS[k].FileCount;
    if (FileCount > 0) {
      pos = pos + i;
      for (i = 0; i < FileCount; ++i)  {
        //ext = FileNameGetExtension(FILE_TABLE.FILE_ENTRY[i + i*k].FileName);
        //if (ext == ".cff" || ext == ".cFf" | ext == ".cFF")
        //  CFF_FILE CFFFile;
        //else    
          struct {   
            FSkip(FILE_TABLE.FILE_ENTRY[pos + i].FileSize);
          } FILE; 
      };
    };
  };
} FILES;