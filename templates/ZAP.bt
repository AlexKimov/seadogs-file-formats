//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

struct {
  UINT S;
  UINT BlockInRowCount; // 128
  UINT BlockSize; // 8
  UINT A3; // 3
  UINT A4; // 7
  UINT BlockCount;
} HEADER;

// the image splits into blocks of 8×8
// if BlockNumber = 0xFF80 - it means it (all 8x8 block) must be replaced with array of 255 values (black pixels), 
// any other value - take data from IMAGE_BLOCKS table by BlockNumber index
struct {
  UINT16 BlockNumber;
} IMAGE_TABLE[HEADER.S*HEADER.BlockInRowCount/HEADER.BlockSize] <bgcolor=0x000000>;

// 
struct {
  UBYTE ImageBlock8x8[HEADER.BlockSize*HEADER.BlockSize];
} IMAGE_BLOCKS[HEADER.BlockCount];

